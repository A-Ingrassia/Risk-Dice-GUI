Andrew Ingrassia
Risk Dice Roll Simulator
README

--- OVERVIEW ---

This application is a dice roll simulator for the board game "Risk". It is a Windows-only desktop GUI built with
PySide6 and Qt Designer, then frozen into a standalone executable using PyInstaller. It is divided into two pages, and
players can navigate between them by clicking the tabs at the top of the window ("SINGLE" and "ONSLAUGHT"). Each page
contains its own unique functionality:

--- PAGE 1: "SINGLE" ---

This page allows players to simulate a single roll - just as if they were playing with physical dice. The players can
click buttons representing the number of dice each player would like to roll (a max of 3 for the attacker and 2 for the
defender). Those numbers are displayed until different ones are chosen. Players can then click the "ROLL" button, which
initiates a single roll and displays the resulting army losses. Pressing the "ROLL" button again clears the previous
result, and releasing it initiates a new roll - and so on.

--- PAGE 2: "ONSLAUGHT" ---

This page represents an imitation of the "blitz" roll from the official Hasbro Risk app - "Risk: Global Domination",
which allows players to dramatically speed up the rolling process.

Players enter the total numbers of attacking and defending armies, then click the "ONSLAUGHT" button, which initiates
a cascade of rolls that only stops when one player is completely defeated (when the attacker has 1 army remaining OR
the defender has 0 armies remaining). The resulting total army losses are then displayed.

--- CONTENTS ---

1. "risk_dice" folder

    - "risk_dice.exe": the actual app (standalone executable)

    - "platforms" (folder): inclusion of this folder inside the same directory as "risk_dice.exe" is currently necessary
      for the app to run properly (due to an issue with the iteration of PySide that was released in December 2020)

2. "main_script.py": main script file containing all of the code that wasn't auto-generated

3. "main_ui.py": the file that was auto-generated by Qt Designer after I used it to do the initial app design (the
   auto-generated file was in XML format and converted to Python script using PySide6)
